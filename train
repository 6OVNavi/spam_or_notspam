import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

data=pd.read_csv('spam.csv')

X=data.drop(labels='Category',axis=1)
Y=data['Category']

from sklearn.linear_model import LogisticRegression

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test=train_test_split(X,Y,test_size=0.2,shuffle=True,random_state=0)



from sklearn.preprocessing import LabelEncoder
LE=LabelEncoder()
y_train=LE.fit_transform(y_train)
y_test=LE.fit_transform(y_test)
#print(X_train,y_train)
from sklearn.feature_extraction.text import CountVectorizer

cv=CountVectorizer()
X_train=X_train['Message'].values
X_test=X_test['Message'].values



from sklearn.naive_bayes import MultinomialNB
from sklearn.linear_model import LogisticRegression
from catboost import CatBoostClassifier
from sklearn.pipeline import Pipeline
from sklearn.ensemble import RandomForestClassifier,AdaBoostClassifier
from sklearn.neighbors import KNeighborsClassifier


clf=Pipeline([
    ('vectorizer',CountVectorizer()),
    ('nb',AdaBoostClassifier())
])

from sklearn.metrics import  accuracy_score

def show_model(model):
    clf = Pipeline([
        ('vectorizer', CountVectorizer()),
        ('model', model)
    ])
    clf.fit(X_train,y_train)
    prediction = clf.predict(X_test)
    pred_train = clf.predict(X_train)
    test_accuracy=accuracy_score(y_test,prediction)
    train_accuracy = accuracy_score(y_train, pred_train)
    return test_accuracy,train_accuracy

results=[]
results.append(show_model(LogisticRegression()))
results.append(show_model(KNeighborsClassifier()))
results.append(show_model(MultinomialNB()))
results.append(show_model(RandomForestClassifier()))
results.append(show_model(AdaBoostClassifier()))

print(results)
